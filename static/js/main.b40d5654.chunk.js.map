{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/heroesSlice.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","onDelete","name","description","element","className","src","alt","style","onClick","type","aria-label","Spinner","role","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","reducers","heroAdded","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","item","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","setFilter","store","configureStore","middleware","getDefaultMiddleware","next","devTools","process","HeroesAddForm","getState","temp","handleChange","e","target","value","onSubmit","preventDefault","uuidv4","reset","JSON","stringify","htmlFor","required","onChange","placeholder","renderFilters","HeroesFilters","setActiveFilter","el","i","classes","autoFocus","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b40d5654.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","const HeroesListItem = ({onDelete, name, description, element}) => {\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button  type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\n/* const initialState = {\r\n    heroes: [],\r\n    heroesLoadingStatus: 'idle'\r\n} */\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/heroes\");\r\n    }\r\n)\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroAdded: (state, action) => {\r\n                    state.heroesLoadingStatus = 'idle';\r\n                    heroesAdapter.addOne(state, action.payload);\r\n                },\r\n        heroDeleted: (state, action) => {\r\n                    heroesAdapter.removeOne(state, action.payload);\r\n                }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {state.heroesLoadingStatus = 'error'})\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes);\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter);\r\n        }\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroAdded,\r\n    heroDeleted\r\n} = actions; ","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\nimport './heroesList.scss';\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\n\nconst HeroesList = () => {\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { createAsyncThunk, createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\n/* const initialState = {\r\n    filters: [],\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n} */\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/filtersFetch',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/filters\");\r\n    }\r\n)\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        setFilter: (state, action) => {state.activeFilter = action.payload}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'})\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\r\nexport default reducer;\r\nexport const {setFilter} = actions;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\n\n\nconst stringMiddleWare = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n}\n\nconst store = configureStore({\n    reducer: {heroes, filters},\n    middleware: [...getDefaultMiddleware(), stringMiddleWare],\n    devTools: process.env.NODE_ENV !== 'production'\n})\n\nexport default store;","import {useHttp} from '../../hooks/http.hook';\r\nimport { useDispatch } from 'react-redux';\r\nimport { heroAdded } from '../heroesList/heroesSlice';\r\nimport { selectAll } from '../heroesFilters/filtersSlice';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../store'\r\nconst HeroesAddForm = () => {\r\n    const dispatch = useDispatch();\r\n    const {request} = useHttp();\r\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\r\n    const filters = selectAll(store.getState());\r\n    console.log(store.getState())\r\n    let temp = {id: '',\r\n                name: '',\r\n                description: '',\r\n                element: null}\r\n    const handleChange = (e) => {\r\n        \r\n        console.log(e.target[\"name\"])\r\n        switch(e.target[\"name\"]){\r\n            case 'name':\r\n                temp.name = e.target.value;\r\n                break;\r\n            case 'text':\r\n                temp.description = e.target.value;\r\n                break;\r\n            case 'element':\r\n                temp.element = e.target.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const addHero = (e) => {\r\n        e.preventDefault();\r\n        temp.id = uuidv4();\r\n        e.target.reset();\r\n        request(`http://localhost:3001/heroes/`, \"POST\", JSON.stringify(temp))\r\n            .then(dispatch(heroAdded(temp)))\r\n        temp = {}\r\n    }\r\n\r\n    const renderFilters = (filters, status) => {\r\n        if (status === \"loading\") {\r\n            return <option>Загрузка элементов</option>\r\n        } else if (status === \"error\") {\r\n            return <option>Ошибка загрузки</option>\r\n        }\r\n        \r\n        if (filters && filters.length > 0 ) {\r\n            return filters.map(({value, name}) => {\r\n                // eslint-disable-next-line\r\n                if (value === 'all')  return;\r\n\r\n                return <option key={value} value={value}>{name}</option>\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={addHero}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\r\n                <input \r\n                    required\r\n                    onChange={e => handleChange(e)}\r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    className=\"form-control\" \r\n                    id=\"name\" \r\n                    placeholder=\"Как меня зовут?\"/>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\r\n                <textarea\r\n                    required\r\n                    name=\"text\" \r\n                    onChange={e => handleChange(e)}\r\n                    className=\"form-control\" \r\n                    id=\"text\" \r\n                    placeholder=\"Что я умею?\"\r\n                    style={{\"height\": '130px'}}/>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\r\n                <select \r\n                    required\r\n                    className=\"form-select\" \r\n                    id=\"element\" \r\n                    onChange={handleChange}\r\n                    name=\"element\">\r\n                    <option >Я владею элементом...</option>\r\n                    {renderFilters(filters, filtersLoadingStatus)}\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HeroesAddForm;","import {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, fetchFilters, selectAll } from './filtersSlice';\nimport store from '../../store'\nimport Spinner from '../spinner/Spinner';\nconst HeroesFilters = () => {\n    const dispatch = useDispatch();\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n    console.log(filters)\n    useEffect(() => {\n        dispatch(fetchFilters());\n    }, [])\n\n    const setActiveFilter = (e) => {\n        const filter = e.target[\"value\"];\n        dispatch(setFilter(filter));\n    }\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                {filtersLoadingStatus === 'loading' ? <Spinner/> : filtersLoadingStatus === 'error' ? <h5 className=\"text-center mt-5\">Ошибка загрузки</h5> : null}\n                <div className=\"btn-group\">\n                    {filters.map((el, i) => {\n                        let classes;\n                        switch (el.value) {\n                            case 'wind':\n                                classes = `btn-success`;\n                                break;\n                            case 'fire':\n                                classes = 'btn-danger';\n                                break;\n                            case 'water':\n                                classes = 'btn-primary';\n                                break;\n                            case 'earth':\n                                classes = 'btn-secondary';\n                                break;\n                            default:\n                                classes = 'btn-outline-dark';\n                        }\n                        return (\n                            <button \n                                value={el.value} \n                                key={i} \n                                autoFocus={el.value === activeFilter}\n                                className={`btn ${classes}${activeFilter === el.value ? \" active\" : ''}`}\n                                onClick={setActiveFilter}>{el.name}</button>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}